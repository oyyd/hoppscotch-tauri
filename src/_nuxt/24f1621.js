(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{965:function(e,t,n){"use strict";n.d(t,"j",(function(){return h})),n.d(t,"e",(function(){return v})),n.d(t,"f",(function(){return q})),n.d(t,"i",(function(){return y})),n.d(t,"l",(function(){return $})),n.d(t,"b",(function(){return R})),n.d(t,"c",(function(){return C})),n.d(t,"a",(function(){return T})),n.d(t,"k",(function(){return N})),n.d(t,"h",(function(){return P})),n.d(t,"g",(function(){return U})),n.d(t,"d",(function(){return z}));n(41);var r,a,u,c,o,i,s,l,p,f,m,b,d=n(243),I=n(19),D=(n(64),n(12),n(150),n(4),n(10),n(8),n(179));n(201);function h(e,t){return O.apply(this,arguments)}function O(){return(O=Object(I.a)(regeneratorRuntime.mark((function e(t,n){var a,u,c;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:a=[],u="";case 2:return e.next=5,t.query({query:Object(D.a)(r||(r=Object(d.a)(["\n        query rootCollectionsOfTeam($teamID: ID!, $cursor: ID!) {\n          rootCollectionsOfTeam(teamID: $teamID, cursor: $cursor) {\n            id\n            title\n          }\n        }\n      "]))),variables:{teamID:n,cursor:u},fetchPolicy:"no-cache"});case 5:if(0!==(c=e.sent).data.rootCollectionsOfTeam.length){e.next=8;break}return e.abrupt("break",12);case 8:c.data.rootCollectionsOfTeam.forEach((function(e){a.push(e)})),u=a[a.length-1].id,e.next=2;break;case 12:return e.abrupt("return",a);case 13:case"end":return e.stop()}}),e)})))).apply(this,arguments)}function v(e,t){return j.apply(this,arguments)}function j(){return(j=Object(I.a)(regeneratorRuntime.mark((function e(t,n){var r;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r=[],e.next=3,t.query({query:Object(D.a)(a||(a=Object(d.a)(["\n      query getCollectionChildren($collectionID: ID!) {\n        collection(collectionID: $collectionID) {\n          children {\n            id\n            title\n          }\n        }\n      }\n    "]))),variables:{collectionID:n},fetchPolicy:"no-cache"});case 3:return e.sent.data.collection.children.forEach((function(e){r.push(e)})),e.abrupt("return",r);case 6:case"end":return e.stop()}}),e)})))).apply(this,arguments)}function q(e,t){return x.apply(this,arguments)}function x(){return(x=Object(I.a)(regeneratorRuntime.mark((function e(t,n){var r,a,c;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:r=[],a="";case 2:return e.next=5,t.query({query:Object(D.a)(u||(u=Object(d.a)(["\n        query getCollectionRequests($collectionID: ID!, $cursor: ID) {\n          requestsInCollection(collectionID: $collectionID, cursor: $cursor) {\n            id\n            title\n            request\n          }\n        }\n      "]))),variables:{collectionID:n,cursor:a},fetchPolicy:"no-cache"});case 5:if((c=e.sent).data.requestsInCollection.forEach((function(e){r.push(e)})),!(c.data.requestsInCollection.length<10)){e.next=9;break}return e.abrupt("break",12);case 9:a=r[r.length-1].id,e.next=2;break;case 12:return e.abrupt("return",r);case 13:case"end":return e.stop()}}),e)})))).apply(this,arguments)}function y(e,t,n){return g.apply(this,arguments)}function g(){return(g=Object(I.a)(regeneratorRuntime.mark((function e(t,n,r){var a;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=3,t.mutate({mutation:Object(D.a)(c||(c=Object(d.a)(["\n        mutation ($newTitle: String!, $collectionID: ID!) {\n          renameCollection(newTitle: $newTitle, collectionID: $collectionID) {\n            id\n          }\n        }\n      "]))),variables:{newTitle:n,collectionID:r}});case 3:if(void 0===(a=e.sent)){e.next=6;break}return e.abrupt("break",8);case 6:e.next=0;break;case 8:return e.abrupt("return",a);case 9:case"end":return e.stop()}}),e)})))).apply(this,arguments)}function $(e,t,n,r){return k.apply(this,arguments)}function k(){return(k=Object(I.a)(regeneratorRuntime.mark((function e(t,n,r,a){var u;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=3,t.mutate({mutation:Object(D.a)(o||(o=Object(d.a)(["\n        mutation ($data: UpdateTeamRequestInput!, $requestID: ID!) {\n          updateRequest(data: $data, requestID: $requestID) {\n            id\n          }\n        }\n      "]))),variables:{data:{request:JSON.stringify(n),title:r},requestID:a}});case 3:if(void 0===(u=e.sent)){e.next=6;break}return e.abrupt("break",8);case 6:e.next=0;break;case 8:return e.abrupt("return",u);case 9:case"end":return e.stop()}}),e)})))).apply(this,arguments)}function R(e,t){return w.apply(this,arguments)}function w(){return(w=Object(I.a)(regeneratorRuntime.mark((function e(t,n){var r;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=3,t.mutate({mutation:Object(D.a)(i||(i=Object(d.a)(["\n        mutation ($collectionID: ID!) {\n          deleteCollection(collectionID: $collectionID)\n        }\n      "]))),variables:{collectionID:n}});case 3:if(void 0===(r=e.sent)){e.next=6;break}return e.abrupt("break",8);case 6:e.next=0;break;case 8:return e.abrupt("return",r);case 9:case"end":return e.stop()}}),e)})))).apply(this,arguments)}function C(e,t){return S.apply(this,arguments)}function S(){return(S=Object(I.a)(regeneratorRuntime.mark((function e(t,n){var r;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=3,t.mutate({mutation:Object(D.a)(s||(s=Object(d.a)(["\n        mutation ($requestID: ID!) {\n          deleteRequest(requestID: $requestID)\n        }\n      "]))),variables:{requestID:n}});case 3:if(void 0===(r=e.sent)){e.next=6;break}return e.abrupt("break",8);case 6:e.next=0;break;case 8:return e.abrupt("return",r);case 9:case"end":return e.stop()}}),e)})))).apply(this,arguments)}function T(e,t,n){return J.apply(this,arguments)}function J(){return(J=Object(I.a)(regeneratorRuntime.mark((function e(t,n,r){var a;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=3,t.mutate({mutation:Object(D.a)(l||(l=Object(d.a)(["\n        mutation ($title: String!, $teamID: ID!) {\n          createRootCollection(title: $title, teamID: $teamID) {\n            id\n          }\n        }\n      "]))),variables:{title:n,teamID:r}});case 3:if(void 0===(a=e.sent)){e.next=6;break}return e.abrupt("break",8);case 6:e.next=0;break;case 8:return e.abrupt("return",a);case 9:case"end":return e.stop()}}),e)})))).apply(this,arguments)}function N(e,t,n,r,a){return E.apply(this,arguments)}function E(){return(E=Object(I.a)(regeneratorRuntime.mark((function e(t,n,r,a,u){var c,o;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,t.mutate({mutation:Object(D.a)(p||(p=Object(d.a)(["\n      mutation ($data: CreateTeamRequestInput!, $collectionID: ID!) {\n        createRequestInCollection(data: $data, collectionID: $collectionID) {\n          id\n          collection {\n            id\n            team {\n              id\n              name\n            }\n          }\n        }\n      }\n    "]))),variables:{collectionID:u,data:{teamID:a,title:r,request:n}}});case 2:return o=e.sent,e.abrupt("return",null===(c=o.data)||void 0===c?void 0:c.createRequestInCollection);case 4:case"end":return e.stop()}}),e)})))).apply(this,arguments)}function P(e,t,n,r){return F.apply(this,arguments)}function F(){return(F=Object(I.a)(regeneratorRuntime.mark((function e(t,n,r,a){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,t.mutate({mutation:Object(D.a)(f||(f=Object(d.a)(["\n      mutation updateRequest($data: UpdateTeamRequestInput!, $requestID: ID!) {\n        updateRequest(data: $data, requestID: $requestID) {\n          id\n          title\n        }\n      }\n    "]))),variables:{requestID:a,data:{request:n,title:r}}});case 2:case"end":return e.stop()}}),e)})))).apply(this,arguments)}function U(e,t,n){return A.apply(this,arguments)}function A(){return(A=Object(I.a)(regeneratorRuntime.mark((function e(t,n,r){var a;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,t.mutate({mutation:Object(D.a)(m||(m=Object(d.a)(["\n      mutation importFromJSON($jsonString: String!, $teamID: ID!) {\n        importCollectionsFromJSON(jsonString: $jsonString, teamID: $teamID)\n      }\n    "]))),variables:{jsonString:JSON.stringify(n),teamID:r}});case 2:return a=e.sent,e.abrupt("return",null!=a.data);case 4:case"end":return e.stop()}}),e)})))).apply(this,arguments)}function z(e,t){return B.apply(this,arguments)}function B(){return(B=Object(I.a)(regeneratorRuntime.mark((function e(t,n){var r;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,t.query({query:Object(D.a)(b||(b=Object(d.a)(["\n      query exportAsJSON($teamID: ID!) {\n        exportCollectionsToJSON(teamID: $teamID)\n      }\n    "]))),variables:{teamID:n}});case 2:return r=e.sent,e.abrupt("return",r.data.exportCollectionsToJSON);case 4:case"end":return e.stop()}}),e)})))).apply(this,arguments)}}}]);